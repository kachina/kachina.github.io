<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Os on Ship of Fools</title>
    <link>https://blog.tetsuya.chiba.jp/categories/os/index.xml</link>
    <description>Recent content in Os on Ship of Fools</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Code released under the Apache 2.0 license.</copyright>
    <atom:link href="https://blog.tetsuya.chiba.jp/categories/os/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>microSDにlubuntuを入れてみた</title>
      <link>https://blog.tetsuya.chiba.jp/post/2014-10-04-lubuntu/</link>
      <pubDate>Sat, 04 Oct 2014 22:59:37 +0900</pubDate>
      
      <guid>https://blog.tetsuya.chiba.jp/post/2014-10-04-lubuntu/</guid>
      <description>

&lt;p&gt;お気に入りの白Macbookがお亡くなりになりました。&lt;/p&gt;

&lt;p&gt;中古品入手から、バッテリーの交換 / HDDからSSDへの換装 / JISからUSキーボードへの換装&lt;br /&gt;
とグレードアップしてきたのですが、キートップをdvorak配列に付け替えた際に『Uキー』の爪が折れてしまい&lt;br /&gt;
接着剤でダマシダマシ使っていたのですが復旧不可能な状態になってしまいました。&lt;/p&gt;

&lt;p&gt;メイン機のMacbook Airは、BYODして仕事で使っているから汚したくないので&lt;br /&gt;
SDカードスロットに指したmicroSDにLinuxを入れて&lt;br /&gt;
どこまで使えるか挑戦してみたいと思います。&lt;/p&gt;

&lt;p&gt;これでダメだったら、Macbookのキートップを探そうかなと(ry&lt;/p&gt;

&lt;p&gt;以下、手順を間違えるとOS X側のデータを全て消去される場合があるので気をつけてください。&lt;/p&gt;

&lt;h3 id=&#34;1-microsdの購入&#34;&gt;1. microSDの購入&lt;/h3&gt;

&lt;p&gt;すぐ遊びたかったので、近所の電気屋さんで16GBのmicroSD(SDカード化するアタッチメント付き)を3千円くらいで購入&lt;/p&gt;

&lt;h3 id=&#34;2-microsdの初期化-パーティションの作成&#34;&gt;2. microSDの初期化、パーティションの作成&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;SDカード化したmicroSDをMacbook Airに指して、Mac標準ソフトの『ディスクユーティリティ』を起動&lt;/li&gt;
&lt;li&gt;パーティションを2つ分割して、1つめのパーティションを以下のとおり作成する&lt;br /&gt;
名前: rEFIt&lt;br /&gt;
フォーマット: Mac OS 拡張 (ジャーナリング)&lt;br /&gt;
サイズ: 0.05&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;2つめのパーティションは無視して「適用」&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://refit.sourceforge.net/&#34;&gt;http://refit.sourceforge.net/&lt;/a&gt; からrEFItの「Mac disk image」をダウンロード&lt;/li&gt;
&lt;li&gt;「rEFIt-0.14.dmg」を展開&lt;/li&gt;
&lt;li&gt;展開した「efi」フォルダを、USBメモリの「rEFIt」パーティションへコピー&lt;/li&gt;
&lt;li&gt;「ターミナル」を起動してmicroSDの「refit」ディレクトリへ移動して「enable.sh」を実行&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;$ cd /Volumes/rEFIt/efi/refit/
$ ./enable.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-インストールメディアの作成&#34;&gt;3. インストールメディアの作成&lt;/h3&gt;

&lt;p&gt;lubuntuのサイトから、最新のインストールイメージを取得して&lt;br /&gt;
インストールメディアを作成します。&lt;br /&gt;
&lt;a href=&#34;http://unetbootin.sourceforge.net/&#34;&gt;unetbootin&lt;/a&gt;を使ってUSBに作成しました。&lt;/p&gt;

&lt;h3 id=&#34;4-lubuntuのインストール&#34;&gt;4. lubuntuのインストール&lt;/h3&gt;

&lt;p&gt;OS Xをシャットダウンしてから、キーボードの「option」を押したまま電源を入れると&lt;br /&gt;
起動メディアの選択ができるので、さっき作成したインストールメディアを選んでインストールスタート&lt;/p&gt;

&lt;p&gt;適当にすすめて、「instllation type」を選択する画面で「Something else」を選択すると&lt;br /&gt;
インストール先のパーティションを選択する画面が表示されるので&lt;br /&gt;
microSDに作成した、2つめのパーティションを選択する。(自分の環境では「/dev/sdb3」)&lt;br /&gt;
そこに、ファイルシステム「ext4」でマウントポイント「/」のパーティションを作成(swapなし)&lt;/p&gt;

&lt;p&gt;ブートローダーのインストール先も、同じパーティションを選択します。&lt;br /&gt;
あとは普通のインストールと一緒なので割愛します。&lt;/p&gt;

&lt;h3 id=&#34;5-lubuntuの起動&#34;&gt;5. lubuntuの起動&lt;/h3&gt;

&lt;p&gt;インストール終了後の再起動時に、キーボードの「option」を押したままにして&lt;br /&gt;
起動メディアの選択ができるので「rEFIt」を選択すると「OS X」か「lubuntu」を選択する画面が表示されます。&lt;/p&gt;

&lt;p&gt;以降、この手順でlubuntuを起動します。&lt;/p&gt;

&lt;h3 id=&#34;6-チューニング-ファイルアクセス時にタイムスタンプを記録しない&#34;&gt;6. チューニング：ファイルアクセス時にタイムスタンプを記録しない&lt;/h3&gt;

&lt;p&gt;microSDなので、SSDやHDDと比べるとIOが遅いです。&lt;br /&gt;
なので、OSのインストールが終わったらをmicroSDへのアクセスを極力減らす努力をします。&lt;/p&gt;

&lt;p&gt;まずは「/etc/fstab」を編集し、マウント時のオプションに「relatime」を追記して&lt;br /&gt;
microSDアクセス時のタイムスタンプ更新頻度を削減します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# /etc/fstabを編集
UUID=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  / ext4  relatime,errors=remount-ro  0  1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;編集後、再マウントする&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;$ sudo mount -o remount /
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-チューニング-tmpをramdisk化&#34;&gt;7. チューニング：/tmpをRAMDISK化&lt;/h3&gt;

&lt;p&gt;頻繁にIOが発生するディレクトリで、OSシャットダウン時に削除されても問題ないものは&lt;br /&gt;
RAMDISKにして、microSDへのIOを減らします。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# /etc/fstabに以下を追記
/dev/shm  /tmp  tmpfs  size=1024m  0  0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-チューニング-var-logもramdisk化&#34;&gt;8. チューニング：/var/logもRAMDISK化&lt;/h3&gt;

&lt;p&gt;快適さを重視してログも残さないことにします。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# /etc/fstabに以下を追記
/dev/shm  /var/log  tmpfs  size=512m  0  0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-チューニング-firefoxのキャッシュもramdisk化&#34;&gt;9. チューニング：FirefoxのキャッシュもRAMDISK化&lt;/h3&gt;

&lt;p&gt;Firefoxがメチャクチャ遅かったので、以下のページを参考にFirefoxのキャッシュもRAMDISKにました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://antarespc.com/web-browser/firefox-cache-ram.html&#34;&gt;http://antarespc.com/web-browser/firefox-cache-ram.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;10-osの再起動&#34;&gt;10. OSの再起動&lt;/h3&gt;

&lt;p&gt;んで、OSを再起動したらチューニング終了&lt;/p&gt;

&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;SSDよりは遅いけど、そこそこ普通につかえるレベルにはなりました。&lt;br /&gt;
以下、入れたものをざっくり紹介&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Byobu (terminal)&lt;/li&gt;
&lt;li&gt;tmux, tmux-powerline&lt;/li&gt;
&lt;li&gt;Ricty (font)&lt;/li&gt;
&lt;li&gt;mozc&lt;/li&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;rbenv&lt;/li&gt;
&lt;li&gt;earthquake (twitterクライアント)&lt;/li&gt;
&lt;li&gt;Dropbox&lt;/li&gt;
&lt;li&gt;Firefox (pluginいっぱい)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あとは、寿命がどれだけ持つかだ&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tmuxのコピーをFedoraのクリップボードに同期する</title>
      <link>https://blog.tetsuya.chiba.jp/post/2014-06-21-tmux/</link>
      <pubDate>Sat, 21 Jun 2014 20:05:37 +0900</pubDate>
      
      <guid>https://blog.tetsuya.chiba.jp/post/2014-06-21-tmux/</guid>
      <description>&lt;p&gt;以前に投稿した『&lt;a href=&#34;http://blog.strigiformes.net/blog/2012/10/06/tmux/&#34;&gt;tmuxのコピーをMacのクリップボードに同期する&lt;/a&gt;』のFedora版です。&lt;/p&gt;

&lt;p&gt;操作を統一するために&lt;code&gt;.zshrc&lt;/code&gt;や&lt;code&gt;.vimrc&lt;/code&gt;等の設定ファイルをDropboxに保管し&lt;br /&gt;
Mac/Fedora/AmazonLinux等の環境を跨いで同期しています。&lt;/p&gt;

&lt;p&gt;新しい環境を構築したら、Dropboxをインストールして&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s ~/Dropbox/.../config/_zshrc ~/.zshrc
$ ln -s ~/Dropbox/.../config/_vimrc ~/.vimrc
$ ...
$ ln -s ~/Dropbox/.../config/_tmux.conf ~/.tmux.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;って感じでシンボリックリンクを貼ることで、すべての環境で設定が同期されます。&lt;/p&gt;

&lt;p&gt;この運用、すごく便利だし設定ファイルのバックアップにもなるので&lt;br /&gt;
お気に入りなのですが、たまに今回のように環境に依存する問題が発生します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS X: pbcopy&lt;/li&gt;
&lt;li&gt;Fedora: xsel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は、『&lt;a href=&#34;http://blog.strigiformes.net/blog/2012/10/06/tmux/&#34;&gt;tmuxのコピーをMacのクリップボードに同期する&lt;/a&gt;』の&lt;br /&gt;
&lt;code&gt;~/bin/tmux-pbcopy&lt;/code&gt;をFedora用に作成することで一旦解決&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
if ! type xsel &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
    tmux display-message &amp;quot;Error: cannot copy to clipboard.&amp;quot;
    exit 0
fi

COPY=`tmux save-buffer -`
echo &amp;quot;$COPY&amp;quot; &amp;gt; ~/.tmux-buffer
xsel -i -b &amp;lt; ~/.tmux-buffer

# メッセージ表示
LINES=`echo &amp;quot;$COPY&amp;quot; | wc -l | tr -d &#39; &#39;`
tmux display-message &amp;quot;Copy: $LINES lines&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なんか、もっと良い方法を考えないと。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fedora 20にbcm4321のドライバをあてる</title>
      <link>https://blog.tetsuya.chiba.jp/post/2014-04-19-fedora-bcm4321/</link>
      <pubDate>Sat, 19 Apr 2014 19:17:37 +0900</pubDate>
      
      <guid>https://blog.tetsuya.chiba.jp/post/2014-04-19-fedora-bcm4321/</guid>
      <description>

&lt;p&gt;今日は&lt;a href=&#34;http://regional.rubykaigi.org/oedo04/&#34;&gt;大江戸Ruby会議04&lt;/a&gt;に行くつもりだったのだけど&lt;br /&gt;
寝起きにスケジュールを確認したら、事前申し込みをしてなかったことが発覚。&lt;br /&gt;
ってことで、今日はノンビリ白Macbookで遊ぶことにします。&lt;/p&gt;

&lt;p&gt;白Macbookは中古品を手に入れた際のテンションで&lt;br /&gt;
SSD/バッテリー/キーボードを買い替えてしまった逸品です。&lt;/p&gt;

&lt;p&gt;なんとか使わないとヤリきれないので、いろんなディストリを試して遊んでいるのですが&lt;br /&gt;
毎度、決まって内蔵の無線LANアダプタに泣かされるので&lt;br /&gt;
ここに解決手順を残しておこうと思います。&lt;/p&gt;

&lt;h1 id=&#34;macbookについて&#34;&gt;Macbookについて&lt;/h1&gt;

&lt;h2 id=&#34;macbookのバージョン&#34;&gt;MacBookのバージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Macbook (13-inch, Early 2008)&lt;/li&gt;
&lt;li&gt;Macbook4.1 (MB404xx/A)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;無線lanアダプタ&#34;&gt;無線LANアダプタ&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ lspci

~~~
Network controller: Broadcom Corporation BCM4321 802.11a/b/g/n (rev 03)
~~~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;適用すべきドライバは&lt;strong&gt;broadcom-wl&lt;/strong&gt;であり&lt;br /&gt;
&lt;strong&gt;ndiswrapper&lt;/strong&gt; / &lt;strong&gt;brcm80211&lt;/strong&gt; / &lt;strong&gt;wl&lt;/strong&gt; / &lt;strong&gt;rndis_wlan&lt;/strong&gt;ではない。&lt;/p&gt;

&lt;h1 id=&#34;fedoraへのドライバ適用&#34;&gt;Fedoraへのドライバ適用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install b43-fwcutter

$ cd ~/tmp
$ wget http://downloads.openwrt.org/sources/broadcom-wl-4.150.10.5.tar.bz2
$ tar xjf broadcom-wl-4.150.10.5.tar.bz2
$ cd broadcom-wl-4.150.10.5/driver
$ sudo b43-fwcutter -w /lib/firmware wl_apsta_mimo.o

$ cd ~/tmp
$ wget http://downloads.openwrt.org/sources/wl_apsta-3.130.20.0.o
$ sudo b43-fwcutter -w /lib/firmware wl_apsta-3.130.20.0.o
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでOSを再起動すれば無線LANアダプタが認識される。&lt;/p&gt;

&lt;p&gt;Fedora(gnome)の操作感がOS Xに近くて良い感じです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gentooでの無線LAN設定</title>
      <link>https://blog.tetsuya.chiba.jp/post/2013-05-18-gentoo-wifi/</link>
      <pubDate>Sat, 18 May 2013 11:03:37 +0900</pubDate>
      
      <guid>https://blog.tetsuya.chiba.jp/post/2013-05-18-gentoo-wifi/</guid>
      <description>

&lt;p&gt;前回の &lt;a href=&#34;http://blog.strigiformes.net/blog/2013/05/12/gentoo-dvorak/&#34;&gt;GentooでDvorak配列を設定して&amp;rdquo;control&amp;rdquo;と&amp;rdquo;caps Lock&amp;rdquo;キーを入れ替える&lt;/a&gt; に続き&lt;br /&gt;
今回は無線LANの設定をしたいとおもいます。&lt;/p&gt;

&lt;p&gt;使っているMacBookのバージョンは4,1(13-inch, Early 2008)です。&lt;/p&gt;

&lt;h1 id=&#34;1-接続されているデバイスを確認&#34;&gt;1. 接続されているデバイスを確認&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;$ lspci | less
02:00.0 Ntework controller [0280]: Broadcom Corporation BCM4321 802.11a/b/g/n [14e4:4328] (rev 03)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;『Broadcom Corporation BCM4321』を利用していることが解りました。&lt;br /&gt;
(&lt;code&gt;lspci&lt;/code&gt; コマンドは &lt;code&gt;emerge sys-apps/pciutils&lt;/code&gt; で使えます)&lt;/p&gt;

&lt;h1 id=&#34;2-デバイスの状態を確認&#34;&gt;2. デバイスの状態を確認&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;$ dmesg
...
b43-phy0: Broadcom 4321 WLAN found (core revision 11)
b43-phy0 ERROR: FOUND UNSUPPORTED PHY (Analog 5, Type 4, Revision 1)
b43: probe of ssb0:0 failed with error -95
Broadcom 43xx driver loaded [ Features: PML ]
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正しく認識されていないことが解りました。&lt;br /&gt;
それでは、カーネルの設定〜アクセスポイントの設定までの&lt;br /&gt;
作業履歴を残していきたいと思います。&lt;/p&gt;

&lt;h1 id=&#34;3-カーネルの設定&#34;&gt;3. カーネルの設定&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;$ cd /usr/src/linux
$ make menuconfig

Device Drivers ---&amp;gt;
  Broadcom specific AMBA
    &amp;lt;M&amp;gt; BCMA support
    [x] Support for BCMA on PCI-host bus
    [x] BCMA Broadcom GBIT MAC COMMON core driver
    [ ] BCMA debugging (NEW)
[*] Network device support
  [*] Wireless LAN
    [ ] Broadcom 43xx debugging
    &amp;lt; &amp;gt; Broadcom 43xx-legacy wireless support (mac80211 stack)
    &amp;lt;M&amp;gt; Broadcom IEEE802.11n PCIe SoftMAC WLAN driver
    &amp;lt;M&amp;gt; Broadcom IEEE802.11n embedded FullMAC WLAN driver
    [*] USB bus interface support for FullMAC driver (NEW)
-*- Networking support
  -*- Wireless
    &amp;lt;M&amp;gt; cfg80211 - wireless configuration API
    [*] cfg80211 wireless extensions compatibility
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;4-ドライバの変更&#34;&gt;4. ドライバの変更&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.broadcom.com/support/802.11/linux_sta.php&#34;&gt;こちら&lt;/a&gt; のREADME.txtに従って&amp;rdquo;wl.ko&amp;rdquo;ファイルを作成します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;$ mkdir /tmp/hybrid_wl
$ cd /tmp/hybrid_wl
$ wget http://www.broadcom.com/docs/linux_sta/hybrid-portsrc_x86_32-v5_100_82_112.tar.gz
$ tar xzf hybrid-portsrc_x86_32-v5_100_82_112.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;手順書に従って&lt;code&gt;make&lt;/code&gt; を実行すると、以下のメッセージが出て失敗します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;KBUILD_NOPEDANTIC=1 make -C /lib/modules/`uname -r`/build M=`pwd`
make[1]: Entering directory `/usr/src/linux-3.8.13-gentoo&#39;
Wireless Extension is the only possible API for this kernel version
Using Wireless Extension API
LD /tmp/hybrid_wl/lbuilt-in.o
CC [M] /tmp/hybrid_wl/src/shared/linux_osl.o
CC [M] /tmp/hybrid_wl/src/wl/sys/wl_linux.o
/tmp/hybrid_wl/src/wl/sys/wl_linux.c:43:24: fatal error: asm/system.h: No such file or directory
compilation terminated.
make[2]: *** [/tmp/hybrid_wl/src/wl/sys/wl_linux.o] Error 1
make[1]: *** [_module_/tmp/hybrid_wl] Error 2
make[1]: Leaving directory `/usr/src/linux-3.8.13-gentoo&#39;
make: *** [all] Error 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;ldquo;src/wl/sys/wl_linux.c&amp;rdquo;ファイルを編集します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;-- 43行目

#include &amp;lt;asm/system.h&amp;gt;
↓
#include &amp;lt;asm/switch_to.h&amp;gt;

-- 388行目
.ndo_set_multicast_list = wl_set_multicast_list,
↓
.ndo_set_rx_mode = wl_set_multicast_list,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ファイルを編集したら&lt;code&gt;make&lt;/code&gt;から手順書の作業を再開します&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;$ make
$ make install
$ depmod
$ modprobe wl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成された&amp;rdquo;wl.ko&amp;rdquo;ファイルを、既存のものと置き換えます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;$ rmmod wl
$ mv /lib/modules/3.8.13-gentoo/kernel/net/wireless/wl.ko /lib/modules/3.8.13-gentoo/kernel/net/wireless/wl.ko.org
$ cp ./wl.ko /lib/modules/3.8.13-gentoo/kernel/net/wireless/
$ depmod
$ modprobe wl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不要なモジュールを読まない様に、ブラックリストに追記し&lt;br /&gt;
&amp;ldquo;wl&amp;rdquo;モジュールをリロードします&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;$ echo &amp;quot;blacklist ssb&amp;quot; &amp;gt;&amp;gt; /etc/modprobe.d/blacklist.conf
$ echo &amp;quot;blacklist bcma&amp;quot; &amp;gt;&amp;gt; /etc/modprobe.d/blacklist.conf
$ echo &amp;quot;blacklist b43&amp;quot; &amp;gt;&amp;gt; /etc/modprobe.d/blacklist.conf
$ rmmod ssb
$ rmmod bcma
$ rmmod b43
$ rmmod wl
$ modprobe wl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで『Broadcom BCM4321』が認識されました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ iwconfig

enp2s0    IEEE 802.11abgn  ESSID:&amp;quot;&amp;quot;
          Mode:Managed  Frequency:2.447 GHz  Access Point: Not-Associated
          Bit Rate:130 Mb/s  Tx-Power:24 dBm
          Retry min limit:7  RTS thr:off  Fragment thr:off
          Power Managementmode:All packets received
          Link Quality=5/5 Signal level=0 dBm Noise level=-57 dBm
          Rx invalid nwid:0 Rx invalid crypt:0 Rx invalid frag:0
          Tx excessive retries:0 Invalid misc:0 Missed beacon:0
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;5-ドライバの設定&#34;&gt;5. ドライバの設定&lt;/h1&gt;

&lt;p&gt;&amp;rdquo;/etc/conf.d/net&amp;rdquo;ファイルに以下を追記&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module_enp2s0=&amp;quot;wpa_supplicant dhcpcd&amp;quot;
config_enp2s0=&amp;quot;dhcp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;dhcpcdデーモンの自動起動が設定されている場合は削除します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rc-update del dhcpcd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;それでは、アクセスポイントの設定に進みます。&lt;/p&gt;

&lt;h1 id=&#34;6-アクセスポイントの設定&#34;&gt;6. アクセスポイントの設定&lt;/h1&gt;

&lt;p&gt;サンプルの設定ファイルを流用します。&lt;/p&gt;

&lt;p&gt;まずは、&amp;rdquo;/usr/share/doc/wpa_supplicant-&lt;version&gt;/wpa_supplicant.conf.gz&amp;rdquo;ファイルを&lt;br /&gt;
&amp;rdquo;/etc/wpa_supplicant/wpa_supplicant.conf&amp;rdquo;に展開し&lt;br /&gt;
557行目の『Example blocks:』以下の行を消しちゃいます。&lt;/p&gt;

&lt;p&gt;そこにアクセスポイントの情報を追記していきます。&lt;br /&gt;
&lt;code&gt;wpa_passshpase&lt;/code&gt;コマンドで、アクセスポイント名、暗号化したパスフレーズを追記します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wpa_passphrase {アクセスポイント名} {パスフレーズ} &amp;gt;&amp;gt; /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;ldquo;wpa_supplicant.conf&amp;rdquo;ファイルを開き、その他の情報を追記します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;network={
  scan_ssid=1
  ssid=&amp;quot;{アクセスポイント名}&amp;quot;
  psk={暗号化されたパスフレーズ}
  priority=1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;7-自動起動の設定&#34;&gt;7. 自動起動の設定&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ cd /etc/init.d
$ ln -s net.lo net.enp2s0
$ rc-update add net.enp2s0 default
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;8-起動&#34;&gt;8. 起動&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ /etc/init.d/net.enp2s0 start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで設定は完了です。&lt;br /&gt;
&lt;code&gt;iwconfig&lt;/code&gt;でアクセスポイントに接続されていることを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ iwconfig enp2s0

enp2s0    IEEE 802.11abgn  ESSID:&amp;quot;{アクセスポイント名}&amp;quot;
          Mode:Managed  Frequency:2.447 GHz  Access Point: xx:xx:xx:xx:xx:xx
          Bit Rate:130 Mb/s  Tx-Power:24 dBm
          Retry min limit:7  RTS thr:off  Fragment thr:off
          Power Managementmode:All packets received
          Link Quality=5/5 Signal level=0 dBm Noise level=-57 dBm
          Rx invalid nwid:0 Rx invalid crypt:0 Rx invalid frag:0
          Tx excessive retries:0 Invalid misc:0 Missed beacon:0
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;9-有線lanの自動起動設定を削除&#34;&gt;9. 有線LANの自動起動設定を削除&lt;/h1&gt;

&lt;p&gt;有線LANは利用は限定的になるので、自動起動の設定を削除します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rc-update del net.eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;苦節1週間、寝落ち3回、何度も外付けのUSB無線LANアダプタに逃げたくなりましたが&lt;br /&gt;
なんとか内蔵の無線LANが使える様になりました。&lt;/p&gt;

&lt;p&gt;これでやっと、スタバでドヤ顔できます。&lt;/p&gt;

&lt;p&gt;あとは、&lt;code&gt;enp2s0&lt;/code&gt;って名前を&lt;code&gt;wlan0&lt;/code&gt;とかに変更したいな。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GentooでDvorak配列を設定して&#34;control&#34;と&#34;caps lock&#34;キーを入れ替える</title>
      <link>https://blog.tetsuya.chiba.jp/post/2013-05-12-gentoo-dvorak/</link>
      <pubDate>Sun, 12 May 2013 11:03:37 +0900</pubDate>
      
      <guid>https://blog.tetsuya.chiba.jp/post/2013-05-12-gentoo-dvorak/</guid>
      <description>&lt;p&gt;ジャンク品の白Macbookが手に入ったので&lt;br /&gt;
JISキーボードをUSキーボードに、HDDをSSDに付け替えて&lt;br /&gt;
干上がったバッテリーを新品に買い替えて、Gentoo Linuxを入れて遊んでます。&lt;/p&gt;

&lt;p&gt;無線LANが使えなかったり／GUI環境が整っていなかったりと、まだまだな感じですが&lt;br /&gt;
環境構築の備忘録を残していこうと思います。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dvorak配列の設定&lt;br /&gt;
まずは、キーボードの配列をQwertyからDvorakに変更します。&lt;br /&gt;
/etc/conf.d/keymapsを開き、以下のとおり編集します。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;keymap=&amp;quot;dvorak&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定ファイルの編集後、キーマップサービスを再起動すればキー配列がDvorakに変わります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/keymaps restart
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&amp;ldquo;control&amp;rdquo;キーと&amp;rdquo;caps lock&amp;rdquo;キーを入れ替える&lt;br /&gt;
Dvorakキー配列の設定は /usr/share/keymaps/i386/dvorak/dvorak.map.gz で定義されています。
まずはファイルを開きます。&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp
cp /usr/share/keymaps/i386/dvorak/dvorak.map.gz /tmp/
gunzip dvorak.map.gz
vim dvorak.map
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エディタにて、以下の行を編集します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keycode 29 = Caps_Lock
...
keycode 58 = Control
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;編集後、ファイルを圧縮して元の場所に戻し&lt;br /&gt;
キーマップサービスを再起動すれば&lt;br /&gt;
&amp;ldquo;control&amp;rdquo;キーと&amp;rdquo;caps lock&amp;rdquo;キーを入れ替わります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gzip dvorak.map
mv dvorak.map.gz /usr/share/keymaps/i386/dvorak/
/etc/init.d/keymaps restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;普段はMacbook Airを使っているのですが&lt;br /&gt;
白Macbookの方が、全然見た目が良いですね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://dl.dropboxusercontent.com/u/523792/blog/gentoo-dvorak.jpg&#34; alt=&#34;Macbook&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ただ、起動時の『ジャーン！』って音だけは慣れません。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sshの鍵ファイル認証にてハデにハマる</title>
      <link>https://blog.tetsuya.chiba.jp/post/2011-07-28-ssh/</link>
      <pubDate>Thu, 28 Jul 2011 11:03:37 +0900</pubDate>
      
      <guid>https://blog.tetsuya.chiba.jp/post/2011-07-28-ssh/</guid>
      <description>

&lt;p&gt;客先の火消し案件中にsshの鍵ファイル認証でハデにハマり&lt;br /&gt;
限りある時間を必要以上に使ってしまったので&lt;br /&gt;
この悲しい記憶を記録とします。&lt;/p&gt;

&lt;p&gt;以下の様な環境で、同一の秘密鍵を利用しているのに&lt;br /&gt;
【Linux1】&amp;lt;-&amp;gt;【Server】の接続は問題ないのだが&lt;br /&gt;
【Linux2】&amp;lt;-&amp;gt;【Server】の接続は失敗する現象に出くわしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;           ssh             ssh
+--------+      +--------+      +--------+
| Linux1 |&amp;lt;----&amp;gt;| Server |&amp;lt;----&amp;gt;| Linux2 |
+--------+      +--------+      +--------+
            OK              NG
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;server&#34;&gt;【Server】&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;os：CentOS release 5.6&lt;/p&gt;

&lt;p&gt;sshd：openssh-server 4.3p2-72&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;linux1-linux2&#34;&gt;【Linux1,Linux2】&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;openssh-clients 4.3p2-41&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;まずは【Server】の設定ファイル『/etc/ssh/sshd_config』を以下のとおり変更し&lt;br /&gt;
デバッグメッセージを『/var/log/secure』へ出力するようにします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SyslogFacility AUTHPRIV
LogLevel DEBUG3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;んで【Linux2】から【Server】へssh接続を実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[piyo@linux2 ~]$ ssh hoge@example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;【Server】側にて、以下のログが出力されました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Jul 28 12:12:48 svn sshd[27401]: debug3: fd 4 is not O_NONBLOCK
Jul 28 12:12:48 svn sshd[27494]: debug1: rexec start in 4 out 4 newsock 4 pipe 6 sock 7
Jul 28 12:12:48 svn sshd[27401]: debug1: Forked child 27494.
Jul 28 12:12:48 svn sshd[27401]: debug3: send_rexec_state: entering fd = 7 config len 701
Jul 28 12:12:48 svn sshd[27401]: debug3: ssh_msg_send: type 0
Jul 28 12:12:48 svn sshd[27401]: debug3: send_rexec_state: done
Jul 28 12:12:48 svn sshd[27494]: debug1: inetd sockets after dupping: 3, 3
Jul 28 12:12:48 svn sshd[27494]: debug3: Normalising mapped IPv4 in IPv6 address
Jul 28 12:12:48 svn sshd[27494]: Connection from xxx.xxx.xxx.xxx port 42178
Jul 28 12:12:48 svn sshd[27494]: debug1: Client protocol version 2.0; client software version OpenSSH_4.3
Jul 28 12:12:48 svn sshd[27494]: debug1: match: OpenSSH_4.3 pat OpenSSH*
Jul 28 12:12:48 svn sshd[27494]: debug1: Enabling compatibility mode for protocol 2.0
Jul 28 12:12:48 svn sshd[27494]: debug1: Local version string SSH-2.0-OpenSSH_4.3
Jul 28 12:12:48 svn sshd[27494]: debug2: fd 3 setting O_NONBLOCK
Jul 28 12:12:48 svn sshd[27495]: debug3: privsep user:group 74:74
Jul 28 12:12:48 svn sshd[27494]: debug2: Network child is on pid 27495
Jul 28 12:12:48 svn sshd[27495]: debug1: permanently_set_uid: 74/74
Jul 28 12:12:48 svn sshd[27494]: debug3: preauth child monitor started
Jul 28 12:12:48 svn sshd[27495]: debug1: list_hostkey_types: ssh-rsa,ssh-dss
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27495]: debug1: SSH2_MSG_KEXINIT sent
Jul 28 12:12:48 svn sshd[27495]: debug1: SSH2_MSG_KEXINIT received
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: ssh-rsa,ssh-dss
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: hmac-md5,hmac-sha1,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: hmac-md5,hmac-sha1,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: none,zlib@openssh.com
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: none,zlib@openssh.com
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit:
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit:
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: first_kex_follows 0
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: reserved 0
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: ssh-rsa,ssh-dss
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour128,arcfour256,arcfour,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se,aes128-ctr,aes192-ctr,aes256-ctr
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour128,arcfour256,arcfour,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se,aes128-ctr,aes192-ctr,aes256-ctr
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: hmac-md5,hmac-sha1,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: hmac-md5,hmac-sha1,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: none,zlib@openssh.com,zlib
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: none,zlib@openssh.com,zlib
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit:
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit:
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: first_kex_follows 0
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_parse_kexinit: reserved 0
Jul 28 12:12:48 svn sshd[27495]: debug2: mac_init: found hmac-md5
Jul 28 12:12:48 svn sshd[27495]: debug1: kex: client-&amp;gt;server aes128-cbc hmac-md5 none
Jul 28 12:12:48 svn sshd[27495]: debug3: Normalising mapped IPv4 in IPv6 address
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_send entering: type 2
Jul 28 12:12:48 svn sshd[27494]: debug3: monitor_read: checking request 2
Jul 28 12:12:48 svn sshd[27494]: debug3: Normalising mapped IPv4 in IPv6 address
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_send entering: type 3
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive_expect entering: type 3
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27495]: debug2: mac_init: found hmac-md5
Jul 28 12:12:48 svn sshd[27495]: debug1: kex: server-&amp;gt;client aes128-cbc hmac-md5 none
Jul 28 12:12:48 svn sshd[27495]: debug3: Normalising mapped IPv4 in IPv6 address
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_send entering: type 2
Jul 28 12:12:48 svn sshd[27494]: debug3: monitor_read: checking request 2
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive_expect entering: type 3
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_send entering: type 3
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27495]: debug1: SSH2_MSG_KEX_DH_GEX_REQUEST received
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_send entering: type 17
Jul 28 12:12:48 svn sshd[27494]: debug3: monitor_read: checking request 17
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_choose_dh: waiting for MONITOR_ANS_MODULI
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_answer_moduli: got parameters: 1024 1024 8192
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive_expect entering: type 18
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_send entering: type 18
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27494]: debug2: monitor_read: 17 used once, disabling now
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_choose_dh: remaining 0
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27495]: debug1: SSH2_MSG_KEX_DH_GEX_GROUP sent
Jul 28 12:12:48 svn sshd[27495]: debug2: dh_gen_key: priv key bits set: 137/256
Jul 28 12:12:48 svn sshd[27495]: debug2: bits set: 536/1024
Jul 28 12:12:48 svn sshd[27495]: debug1: expecting SSH2_MSG_KEX_DH_GEX_INIT
Jul 28 12:12:48 svn sshd[27495]: debug2: bits set: 499/1024
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_key_sign entering
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_send entering: type 22
Jul 28 12:12:48 svn sshd[27494]: debug3: monitor_read: checking request 22
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_key_sign: waiting for MONITOR_ANS_SIGN
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive_expect entering: type 23
Jul 28 12:12:48 svn sshd[27495]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_answer_sign
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_answer_sign: signature 0x9c1c7a0(271)
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_send entering: type 23
Jul 28 12:12:48 svn sshd[27494]: debug2: monitor_read: 22 used once, disabling now
Jul 28 12:12:48 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:48 svn sshd[27495]: debug1: SSH2_MSG_KEX_DH_GEX_REPLY sent
Jul 28 12:12:48 svn sshd[27495]: debug2: kex_derive_keys
Jul 28 12:12:48 svn sshd[27495]: debug2: set_newkeys: mode 1
Jul 28 12:12:48 svn sshd[27495]: debug1: SSH2_MSG_NEWKEYS sent
Jul 28 12:12:48 svn sshd[27495]: debug1: expecting SSH2_MSG_NEWKEYS
Jul 28 12:12:48 svn sshd[27495]: debug2: set_newkeys: mode 0
Jul 28 12:12:48 svn sshd[27495]: debug1: SSH2_MSG_NEWKEYS received
Jul 28 12:12:48 svn sshd[27495]: debug1: KEX done
Jul 28 12:12:49 svn sshd[27495]: debug1: userauth-request for user kachina service ssh-connection method none
Jul 28 12:12:49 svn sshd[27495]: debug1: attempt 0 failures 0
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_getpwnamallow entering
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_send entering: type 24
Jul 28 12:12:49 svn sshd[27494]: debug3: monitor_read: checking request 24
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_answer_pwnamallow
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_request_send entering: type 25
Jul 28 12:12:49 svn sshd[27494]: debug2: monitor_read: 24 used once, disabling now
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_receive_expect entering: type 25
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_receive entering
Jul 28 12:12:49 svn sshd[27495]: debug2: input_userauth_request: setting up authctxt for kachina
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_start_pam entering
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_send entering: type 6
Jul 28 12:12:49 svn sshd[27494]: debug3: monitor_read: checking request 6
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_inform_authserv entering
Jul 28 12:12:49 svn sshd[27494]: debug1: PAM: initializing for &amp;quot;kachina&amp;quot;
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_send entering: type 20
Jul 28 12:12:49 svn sshd[27494]: debug3: Normalising mapped IPv4 in IPv6 address
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_inform_authrole entering
Jul 28 12:12:49 svn sshd[27494]: debug3: Trying to reverse map address xxx.xxx.xxx.xxx.
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_send entering: type 21
Jul 28 12:12:49 svn sshd[27495]: debug2: input_userauth_request: try method none
Jul 28 12:12:49 svn sshd[27495]: debug1: userauth-request for user kachina service ssh-connection method publickey
Jul 28 12:12:49 svn sshd[27495]: debug1: attempt 1 failures 1
Jul 28 12:12:49 svn sshd[27495]: debug2: input_userauth_request: try method publickey
Jul 28 12:12:49 svn sshd[27495]: debug1: test whether pkalg/pkblob are acceptable
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_key_allowed entering
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_send entering: type 38
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_receive_expect entering: type 39
Jul 28 12:12:49 svn sshd[27495]: debug3: mm_request_receive entering
Jul 28 12:12:49 svn sshd[27494]: debug1: PAM: setting PAM_RHOST to &amp;quot;example.com&amp;quot;
Jul 28 12:12:49 svn sshd[27494]: debug1: PAM: setting PAM_TTY to &amp;quot;ssh&amp;quot;
Jul 28 12:12:49 svn sshd[27494]: debug2: monitor_read: 6 used once, disabling now
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:49 svn sshd[27494]: debug3: monitor_read: checking request 20
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_answer_authserv: service=ssh-connection, style=
Jul 28 12:12:49 svn sshd[27494]: debug2: monitor_read: 20 used once, disabling now
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:49 svn sshd[27494]: debug3: monitor_read: checking request 21
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_answer_authrole: role=
Jul 28 12:12:49 svn sshd[27494]: debug2: monitor_read: 21 used once, disabling now
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:49 svn sshd[27494]: debug3: monitor_read: checking request 38
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_answer_keyallowed entering
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_answer_keyallowed: key_from_blob: 0x9c21770
Jul 28 12:12:49 svn sshd[27494]: debug1: temporarily_use_uid: 503/503 (e=0/0)
Jul 28 12:12:49 svn sshd[27494]: debug1: trying public key file /home/hoge/.ssh/authorized_keys
Jul 28 12:12:49 svn sshd[27494]: debug3: secure_filename: checking &#39;/home/hoge/.ssh&#39;
Jul 28 12:12:49 svn sshd[27494]: debug3: secure_filename: checking &#39;/home/hoge&#39;
Jul 28 12:12:49 svn sshd[27494]: debug3: secure_filename: terminating check at &#39;/home/hoge&#39;
Jul 28 12:12:49 svn sshd[27494]: debug1: restore_uid: 0/0
Jul 28 12:12:49 svn sshd[27494]: debug2: key not found
Jul 28 12:12:49 svn sshd[27494]: debug1: temporarily_use_uid: 503/503 (e=0/0)
Jul 28 12:12:49 svn sshd[27494]: debug1: trying public key file /home/hoge/.ssh/authorized_keys
Jul 28 12:12:49 svn sshd[27494]: debug3: secure_filename: checking &#39;/home/hoge/.ssh&#39;
Jul 28 12:12:49 svn sshd[27494]: debug3: secure_filename: checking &#39;/home/hoge&#39;
Jul 28 12:12:49 svn sshd[27494]: debug3: secure_filename: terminating check at &#39;/home/hoge&#39;
Jul 28 12:12:49 svn sshd[27494]: debug1: restore_uid: 0/0
Jul 28 12:12:49 svn sshd[27494]: debug2: key not found
Jul 28 12:12:49 svn sshd[27494]: Failed publickey for kachina from xxx.xxx.xxx.xxx port 42178 ssh2
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_answer_keyallowed: key 0x9c21770 is disallowed
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_request_send entering: type 39
Jul 28 12:12:49 svn sshd[27494]: debug3: mm_request_receive entering
Jul 28 12:12:49 svn sshd[27495]: debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa
Jul 28 12:12:49 svn sshd[27495]: debug3: Normalising mapped IPv4 in IPv6 address
Jul 28 12:12:49 svn sshd[27495]: Connection closed by xxx.xxx.xxx.xxx
Jul 28 12:12:49 svn sshd[27495]: debug1: do_cleanup
Jul 28 12:12:49 svn sshd[27495]: debug3: PAM: sshpam_thread_cleanup entering
Jul 28 12:12:49 svn sshd[27494]: debug1: do_cleanup
Jul 28 12:12:49 svn sshd[27494]: debug1: PAM: cleanup
Jul 28 12:12:49 svn sshd[27494]: debug3: PAM: sshpam_thread_cleanup entering
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この手の内容でググると【Server】側のパーミッションの問題ってのがヒットするのだけど&lt;br /&gt;
その場合は【Linux1】&amp;lt;-&amp;gt;【Server】も失敗するハズなので無関係と判断します。&lt;/p&gt;

&lt;p&gt;さて、パーミッション以外の情報が全然ないの。。。&lt;/p&gt;

&lt;p&gt;【Linux1】と【Linux2】の『~/.ssh』以下を比較してみると&lt;br /&gt;
【Linux1】の『id_rsa』と『id_rsa.pub』が対(キーペア)であることに対して&lt;br /&gt;
【Linux2】の『id_rsa』と『id_rsa.pub』は対(キーペア)ではありませんでした。&lt;/p&gt;

&lt;p&gt;ってことで、【Linux2】の『id_rsa.pub』をリネームして再接続してみると成功！&lt;/p&gt;

&lt;p&gt;要約すると、sshクライアントが自動認識する&lt;br /&gt;
秘密鍵ファイル『~/.ssh/id_rsa』と、公開鍵ファイル『~/.ssh/id_rsa.pub』が存在する場合に&lt;br /&gt;
この2ファイルは対(キーペア)である必要がある。&lt;/p&gt;

&lt;p&gt;秘密鍵なんて、何個も作るもんじゃないね。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>magic trackpadのジェスチャーが使えない！</title>
      <link>https://blog.tetsuya.chiba.jp/post/2011-01-06-magic-trackpad/</link>
      <pubDate>Thu, 06 Jan 2011 11:03:37 +0900</pubDate>
      
      <guid>https://blog.tetsuya.chiba.jp/post/2011-01-06-magic-trackpad/</guid>
      <description>&lt;p&gt;【magic trackpad】買ったのだけど、マニュアルに従ってインストールしても&lt;br /&gt;
ジェスチャーが全く使えない。。。&lt;/p&gt;

&lt;p&gt;ドライバのインストールが必要らしいので、以下のリンクからインストールしてみる。&lt;br /&gt;
『&lt;a href=&#34;http://support.apple.com/kb/DL1066?viewlocale=ja_JP&#34;&gt;Magic Trackpad および Multi-Touch アップデート 1.0&lt;/a&gt;』&lt;/p&gt;

&lt;p&gt;でも、ダメだった。。。&lt;br /&gt;
症状としては、マウスとして認識されていてトラックパッドとしてはNGって感じ&lt;/p&gt;

&lt;p&gt;結果、たどり着いた答えは『USB Overdrive』をアンインストールすることでした。&lt;br /&gt;
なんか、このUSB汎用ドライバがトラックパッド用のドライバとコンフリクトしてたみたい。&lt;/p&gt;

&lt;p&gt;メインマシンがmacbookなんだけど&lt;br /&gt;
家用の『外部ディスプレイ』＋『ワイヤレスキーボード』＋『magic trackpad』の構成が完成しました。&lt;/p&gt;

&lt;p&gt;マルチタッチのズームとか、Exposéとか、想像以上に快適でウレシイぞ&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>