<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Os on Ship of Fools</title>
    <link>https://kachina.github.io/categories/os/</link>
    <description>Recent content in Os on Ship of Fools</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Code released under the Apache 2.0 license.</copyright>
    <lastBuildDate>Sat, 04 Oct 2014 22:59:37 +0900</lastBuildDate>
    
	<atom:link href="https://kachina.github.io/categories/os/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>microSDにlubuntuを入れてみた</title>
      <link>https://kachina.github.io/post/2014-10-04-lubuntu/</link>
      <pubDate>Sat, 04 Oct 2014 22:59:37 +0900</pubDate>
      
      <guid>https://kachina.github.io/post/2014-10-04-lubuntu/</guid>
      <description>お気に入りの白Macbookがお亡くなりになりました。
中古品入手から、バッテリーの交換 / HDDからSSDへの換装 / JISからUSキーボードへの換装
とグレードアップしてきたのですが、キートップをdvorak配列に付け替えた際に『Uキー』の爪が折れてしまい
接着剤でダマシダマシ使っていたのですが復旧不可能な状態になってしまいました。
メイン機のMacbook Airは、BYODして仕事で使っているから汚したくないので
SDカードスロットに指したmicroSDにLinuxを入れて
どこまで使えるか挑戦してみたいと思います。
これでダメだったら、Macbookのキートップを探そうかなと(ry
以下、手順を間違えるとOS X側のデータを全て消去される場合があるので気をつけてください。
1. microSDの購入 すぐ遊びたかったので、近所の電気屋さんで16GBのmicroSD(SDカード化するアタッチメント付き)を3千円くらいで購入
2. microSDの初期化、パーティションの作成  SDカード化したmicroSDをMacbook Airに指して、Mac標準ソフトの『ディスクユーティリティ』を起動 パーティションを2つ分割して、1つめのパーティションを以下のとおり作成する
名前: rEFIt
フォーマット: Mac OS 拡張 (ジャーナリング)
サイズ: 0.05
 2つめのパーティションは無視して「適用」 http://refit.sourceforge.net/ からrEFItの「Mac disk image」をダウンロード 「rEFIt-0.14.dmg」を展開 展開した「efi」フォルダを、USBメモリの「rEFIt」パーティションへコピー 「ターミナル」を起動してmicroSDの「refit」ディレクトリへ移動して「enable.sh」を実行  $ cd /Volumes/rEFIt/efi/refit/ $ ./enable.sh  3. インストールメディアの作成 lubuntuのサイトから、最新のインストールイメージを取得して
インストールメディアを作成します。
unetbootinを使ってUSBに作成しました。
4. lubuntuのインストール OS Xをシャットダウンしてから、キーボードの「option」を押したまま電源を入れると
起動メディアの選択ができるので、さっき作成したインストールメディアを選んでインストールスタート
適当にすすめて、「instllation type」を選択する画面で「Something else」を選択すると
インストール先のパーティションを選択する画面が表示されるので
microSDに作成した、2つめのパーティションを選択する。(自分の環境では「/dev/sdb3」)
そこに、ファイルシステム「ext4」でマウントポイント「/」のパーティションを作成(swapなし)
ブートローダーのインストール先も、同じパーティションを選択します。
あとは普通のインストールと一緒なので割愛します。
5. lubuntuの起動 インストール終了後の再起動時に、キーボードの「option」を押したままにして</description>
    </item>
    
    <item>
      <title>tmuxのコピーをFedoraのクリップボードに同期する</title>
      <link>https://kachina.github.io/post/2014-06-21-tmux/</link>
      <pubDate>Sat, 21 Jun 2014 20:05:37 +0900</pubDate>
      
      <guid>https://kachina.github.io/post/2014-06-21-tmux/</guid>
      <description>以前に投稿した『tmuxのコピーをMacのクリップボードに同期する』のFedora版です。
操作を統一するために.zshrcや.vimrc等の設定ファイルをDropboxに保管し
Mac/Fedora/AmazonLinux等の環境を跨いで同期しています。
新しい環境を構築したら、Dropboxをインストールして
$ ln -s ~/Dropbox/.../config/_zshrc ~/.zshrc $ ln -s ~/Dropbox/.../config/_vimrc ~/.vimrc $ ... $ ln -s ~/Dropbox/.../config/_tmux.conf ~/.tmux.conf  って感じでシンボリックリンクを貼ることで、すべての環境で設定が同期されます。
この運用、すごく便利だし設定ファイルのバックアップにもなるので
お気に入りなのですが、たまに今回のように環境に依存する問題が発生します。
 OS X: pbcopy Fedora: xsel  今回は、『tmuxのコピーをMacのクリップボードに同期する』の
~/bin/tmux-pbcopyをFedora用に作成することで一旦解決
#!/bin/sh if ! type xsel &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then tmux display-message &amp;quot;Error: cannot copy to clipboard.&amp;quot; exit 0 fi COPY=`tmux save-buffer -` echo &amp;quot;$COPY&amp;quot; &amp;gt; ~/.tmux-buffer xsel -i -b &amp;lt; ~/.tmux-buffer # メッセージ表示 LINES=`echo &amp;quot;$COPY&amp;quot; | wc -l | tr -d &#39; &#39;` tmux display-message &amp;quot;Copy: $LINES lines&amp;quot;  なんか、もっと良い方法を考えないと。。。</description>
    </item>
    
    <item>
      <title>fedora 20にbcm4321のドライバをあてる</title>
      <link>https://kachina.github.io/post/2014-04-19-fedora-bcm4321/</link>
      <pubDate>Sat, 19 Apr 2014 19:17:37 +0900</pubDate>
      
      <guid>https://kachina.github.io/post/2014-04-19-fedora-bcm4321/</guid>
      <description>今日は大江戸Ruby会議04に行くつもりだったのだけど
寝起きにスケジュールを確認したら、事前申し込みをしてなかったことが発覚。
ってことで、今日はノンビリ白Macbookで遊ぶことにします。
白Macbookは中古品を手に入れた際のテンションで
SSD/バッテリー/キーボードを買い替えてしまった逸品です。
なんとか使わないとヤリきれないので、いろんなディストリを試して遊んでいるのですが
毎度、決まって内蔵の無線LANアダプタに泣かされるので
ここに解決手順を残しておこうと思います。
Macbookについて MacBookのバージョン  Macbook (13-inch, Early 2008) Macbook4.1 (MB404xx/A)  無線LANアダプタ $ lspci ~~~ Network controller: Broadcom Corporation BCM4321 802.11a/b/g/n (rev 03) ~~~  適用すべきドライバはbroadcom-wlであり
ndiswrapper / brcm80211 / wl / rndis_wlanではない。
Fedoraへのドライバ適用 $ sudo yum install b43-fwcutter $ cd ~/tmp $ wget http://downloads.openwrt.org/sources/broadcom-wl-4.150.10.5.tar.bz2 $ tar xjf broadcom-wl-4.150.10.5.tar.bz2 $ cd broadcom-wl-4.150.10.5/driver $ sudo b43-fwcutter -w /lib/firmware wl_apsta_mimo.o $ cd ~/tmp $ wget http://downloads.</description>
    </item>
    
    <item>
      <title>Gentooでの無線LAN設定</title>
      <link>https://kachina.github.io/post/2013-05-18-gentoo-wifi/</link>
      <pubDate>Sat, 18 May 2013 11:03:37 +0900</pubDate>
      
      <guid>https://kachina.github.io/post/2013-05-18-gentoo-wifi/</guid>
      <description>前回の GentooでDvorak配列を設定して&amp;rdquo;control&amp;rdquo;と&amp;rdquo;caps Lock&amp;rdquo;キーを入れ替える に続き
今回は無線LANの設定をしたいとおもいます。
使っているMacBookのバージョンは4,1(13-inch, Early 2008)です。
1. 接続されているデバイスを確認 $ lspci | less 02:00.0 Ntework controller [0280]: Broadcom Corporation BCM4321 802.11a/b/g/n [14e4:4328] (rev 03)  『Broadcom Corporation BCM4321』を利用していることが解りました。
(lspci コマンドは emerge sys-apps/pciutils で使えます)
2. デバイスの状態を確認 $ dmesg ... b43-phy0: Broadcom 4321 WLAN found (core revision 11) b43-phy0 ERROR: FOUND UNSUPPORTED PHY (Analog 5, Type 4, Revision 1) b43: probe of ssb0:0 failed with error -95 Broadcom 43xx driver loaded [ Features: PML ] .</description>
    </item>
    
    <item>
      <title>GentooでDvorak配列を設定して&#34;control&#34;と&#34;caps lock&#34;キーを入れ替える</title>
      <link>https://kachina.github.io/post/2013-05-12-gentoo-dvorak/</link>
      <pubDate>Sun, 12 May 2013 11:03:37 +0900</pubDate>
      
      <guid>https://kachina.github.io/post/2013-05-12-gentoo-dvorak/</guid>
      <description>ジャンク品の白Macbookが手に入ったので
JISキーボードをUSキーボードに、HDDをSSDに付け替えて
干上がったバッテリーを新品に買い替えて、Gentoo Linuxを入れて遊んでます。
無線LANが使えなかったり／GUI環境が整っていなかったりと、まだまだな感じですが
環境構築の備忘録を残していこうと思います。
 Dvorak配列の設定
まずは、キーボードの配列をQwertyからDvorakに変更します。
/etc/conf.d/keymapsを開き、以下のとおり編集します。
  keymap=&amp;quot;dvorak&amp;quot;  設定ファイルの編集後、キーマップサービスを再起動すればキー配列がDvorakに変わります。
/etc/init.d/keymaps restart   &amp;ldquo;control&amp;rdquo;キーと&amp;rdquo;caps lock&amp;rdquo;キーを入れ替える
Dvorakキー配列の設定は /usr/share/keymaps/i386/dvorak/dvorak.map.gz で定義されています。 まずはファイルを開きます。
  cd /tmp cp /usr/share/keymaps/i386/dvorak/dvorak.map.gz /tmp/ gunzip dvorak.map.gz vim dvorak.map  エディタにて、以下の行を編集します。
keycode 29 = Caps_Lock ... keycode 58 = Control  編集後、ファイルを圧縮して元の場所に戻し
キーマップサービスを再起動すれば
&amp;ldquo;control&amp;rdquo;キーと&amp;rdquo;caps lock&amp;rdquo;キーを入れ替わります。
gzip dvorak.map mv dvorak.map.gz /usr/share/keymaps/i386/dvorak/ /etc/init.d/keymaps restart  普段はMacbook Airを使っているのですが
白Macbookの方が、全然見た目が良いですね。
ただ、起動時の『ジャーン！』って音だけは慣れません。</description>
    </item>
    
    <item>
      <title>sshの鍵ファイル認証にてハデにハマる</title>
      <link>https://kachina.github.io/post/2011-07-28-ssh/</link>
      <pubDate>Thu, 28 Jul 2011 11:03:37 +0900</pubDate>
      
      <guid>https://kachina.github.io/post/2011-07-28-ssh/</guid>
      <description>客先の火消し案件中にsshの鍵ファイル認証でハデにハマり
限りある時間を必要以上に使ってしまったので
この悲しい記憶を記録とします。
以下の様な環境で、同一の秘密鍵を利用しているのに
【Linux1】&amp;lt;-&amp;gt;【Server】の接続は問題ないのだが
【Linux2】&amp;lt;-&amp;gt;【Server】の接続は失敗する現象に出くわしました。
 ssh ssh +--------+ +--------+ +--------+ | Linux1 |&amp;lt;----&amp;gt;| Server |&amp;lt;----&amp;gt;| Linux2 | +--------+ +--------+ +--------+ OK NG  【Server】  os：CentOS release 5.6
sshd：openssh-server 4.3p2-72
 【Linux1,Linux2】  openssh-clients 4.3p2-41
 まずは【Server】の設定ファイル『/etc/ssh/sshd_config』を以下のとおり変更し
デバッグメッセージを『/var/log/secure』へ出力するようにします。
SyslogFacility AUTHPRIV LogLevel DEBUG3  んで【Linux2】から【Server】へssh接続を実行すると
[piyo@linux2 ~]$ ssh hoge@example.com  【Server】側にて、以下のログが出力されました。
Jul 28 12:12:48 svn sshd[27401]: debug3: fd 4 is not O_NONBLOCK Jul 28 12:12:48 svn sshd[27494]: debug1: rexec start in 4 out 4 newsock 4 pipe 6 sock 7 Jul 28 12:12:48 svn sshd[27401]: debug1: Forked child 27494.</description>
    </item>
    
    <item>
      <title>magic trackpadのジェスチャーが使えない！</title>
      <link>https://kachina.github.io/post/2011-01-06-magic-trackpad/</link>
      <pubDate>Thu, 06 Jan 2011 11:03:37 +0900</pubDate>
      
      <guid>https://kachina.github.io/post/2011-01-06-magic-trackpad/</guid>
      <description>【magic trackpad】買ったのだけど、マニュアルに従ってインストールしても
ジェスチャーが全く使えない。。。
ドライバのインストールが必要らしいので、以下のリンクからインストールしてみる。
『Magic Trackpad および Multi-Touch アップデート 1.0』
でも、ダメだった。。。
症状としては、マウスとして認識されていてトラックパッドとしてはNGって感じ
結果、たどり着いた答えは『USB Overdrive』をアンインストールすることでした。
なんか、このUSB汎用ドライバがトラックパッド用のドライバとコンフリクトしてたみたい。
メインマシンがmacbookなんだけど
家用の『外部ディスプレイ』＋『ワイヤレスキーボード』＋『magic trackpad』の構成が完成しました。
マルチタッチのズームとか、Exposéとか、想像以上に快適でウレシイぞ</description>
    </item>
    
  </channel>
</rss>